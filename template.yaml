AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: album-server

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
  Api:
    Auth:
      AddDefaultAuthorizerToCorsPreflight: false
      DefaultAuthorizer: AlbumApiAuthorizer
      Authorizers:
        AlbumApiAuthorizer:
          UserPoolArn: !Sub "arn:aws:cognito-idp:ap-northeast-1:${AWS::AccountId}:userpool/${AWS::Region}_azc25x1AV"
          AuthType: "COGNITO_USER_POOLS"
    Cors:
      AllowMethods: "'POST, GET, DELETE'"
      AllowHeaders: "'access-control-allow-origin,content-type,Authorization'"
      AllowOrigin: "'*'"
Resources:
  AlbumApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
  ListTagsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: application/ListTags
      Handler: listTags
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /tags
            Method: GET
            RestApiId: !Ref AlbumApi
  PostPictureFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: application/PostPicture
      Handler: postPicture
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /pictures
            Method: POST
            RestApiId: !Ref AlbumApi
  ListPicturesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: application/Listpictures
      Handler: listPictures
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /pictures
            Method: GET
            RestApiId: !Ref AlbumApi
  tagTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: UserName
          AttributeType: S
        - AttributeName: TagName
          AttributeType: S
      KeySchema:
        - AttributeName: UserName
          KeyType: HASH
        - AttributeName: TagName
          KeyType: RANGE
      TableName: Tag
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  taggedImageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
        - AttributeName: UserTagName
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
        - AttributeName: UserTagName
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI-UserTagName
          KeySchema:
            - AttributeName: UserTagName
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      TableName: TaggedImage
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  imageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: album-file-bucket
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ListTagsFunction:
    Description: "ListTagsFunction ARN"
    Value: !GetAtt ListTagsFunction.Arn
  ListTagsFunctionIamRole:
    Description: "Implicit IAM Role created for ListTagsFunction"
    Value: !GetAtt ListTagsFunctionRole.Arn
  PostPictureFunction:
    Description: "PostPictureFunction ARN"
    Value: !GetAtt PostPictureFunction.Arn
  PostPictureFunctionIamRole:
    Description: "Implicit IAM Role created for PostPictureFunction"
    Value: !GetAtt PostPictureFunctionRole.Arn
  ListPicturesFunction:
    Description: "ListPicturesFunction ARN"
    Value: !GetAtt ListPicturesFunction.Arn
  ListPicturesFunctionIamRole:
    Description: "Implicit IAM Role created for ListPicturesFunction"
    Value: !GetAtt ListPicturesFunctionRole.Arn
